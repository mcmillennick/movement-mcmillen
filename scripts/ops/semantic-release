#!/bin/bash

# parse bump type from args
BUMP_TYPE=${1:-auto}
if [ "$BUMP_TYPE" != "auto" ] && [ "$BUMP_TYPE" != "major" ] && [ "$BUMP_TYPE" != "minor" ] && [ "$BUMP_TYPE" != "patch" ]; then
    echo "Invalid bump type: $BUMP_TYPE"
    exit 1
fi

# parse dry run from args
DRY_RUN=${2:-true}

# format dry run
if [ "$DRY_RUN" == "true" ]; then
    DRY_RUN="--dry-run"
else
    DRY_RUN=""
fi

# check if git is installed
if ! command -v git &> /dev/null; then
    echo "git is not installed"
    exit 1
fi

# check if convco is installed
if ! command -v convco &> /dev/null; then
    echo "convco is not installed"
    exit 1
fi

# check if cog is installed
if ! command -v cog &> /dev/null; then
    echo "cocogitto (cog) is not installed"
    exit 1
fi

# check if cargo-edit is installed
if ! cargo install --list | grep -q "cargo-edit"; then
    echo "cargo-edit is not installed"
    exit 1
fi

echo "Creating semantic release"

# get current commit hash
COMMIT_HASH_CURRENT=$(git rev-parse HEAD)

# get the last tag on the current branch
LAST_TAG=$(git describe --tags --abbrev=0)

# get the commit hash of the last tag
COMMIT_HASH_LAST_TAG=$(git rev-list -n 1 $LAST_TAG)

# check if the current commit hash is the same as the last tag commit hash
if [ "$COMMIT_HASH_CURRENT" == "$COMMIT_HASH_LAST_TAG" ]; then
    echo "No new commits since the last tag"
    exit 1
fi

# generate changelog
CONVENTIONAL_COMMITS=$(convco check --merges --ignore-reverts $COMMIT_HASH_LAST_TAG..$COMMIT_HASH_CURRENT)

if echo "$CONVENTIONAL_COMMITS" | grep -qi "fail"; then
    echo "Failures found in conventional commits"
    exit 1
fi

echo "No failures found in conventional commits"

# bump version
echo "Bumping version"
cog bump --$BUMP_TYPE $DRY_RUN

# output the new version
NEW_VERSION=$(cog get-version)
NEW_VERSION="${NEW_VERSION#New version: }"
echo "$NEW_VERSION"

exit 0
